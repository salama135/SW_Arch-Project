//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BPT_Consumer.BPT_Service {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="User", Namespace="http://schemas.datacontract.org/2004/07/BPT_Service")]
    [System.SerializableAttribute()]
    public partial class User : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string emailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int idField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string passwordField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string email {
            get {
                return this.emailField;
            }
            set {
                if ((object.ReferenceEquals(this.emailField, value) != true)) {
                    this.emailField = value;
                    this.RaisePropertyChanged("email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int id {
            get {
                return this.idField;
            }
            set {
                if ((this.idField.Equals(value) != true)) {
                    this.idField = value;
                    this.RaisePropertyChanged("id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string password {
            get {
                return this.passwordField;
            }
            set {
                if ((object.ReferenceEquals(this.passwordField, value) != true)) {
                    this.passwordField = value;
                    this.RaisePropertyChanged("password");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserInfo", Namespace="http://schemas.datacontract.org/2004/07/BPT_Service")]
    [System.SerializableAttribute()]
    public partial class UserInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int bloodPressureField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string genderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int idField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string nameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int weightField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int age {
            get {
                return this.ageField;
            }
            set {
                if ((this.ageField.Equals(value) != true)) {
                    this.ageField = value;
                    this.RaisePropertyChanged("age");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int bloodPressure {
            get {
                return this.bloodPressureField;
            }
            set {
                if ((this.bloodPressureField.Equals(value) != true)) {
                    this.bloodPressureField = value;
                    this.RaisePropertyChanged("bloodPressure");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string gender {
            get {
                return this.genderField;
            }
            set {
                if ((object.ReferenceEquals(this.genderField, value) != true)) {
                    this.genderField = value;
                    this.RaisePropertyChanged("gender");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int id {
            get {
                return this.idField;
            }
            set {
                if ((this.idField.Equals(value) != true)) {
                    this.idField = value;
                    this.RaisePropertyChanged("id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                if ((object.ReferenceEquals(this.nameField, value) != true)) {
                    this.nameField = value;
                    this.RaisePropertyChanged("name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int weight {
            get {
                return this.weightField;
            }
            set {
                if ((this.weightField.Equals(value) != true)) {
                    this.weightField = value;
                    this.RaisePropertyChanged("weight");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="BPT_Service.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SignIn", ReplyAction="http://tempuri.org/IService1/SignInResponse")]
        BPT_Consumer.BPT_Service.User SignIn(string email, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SignIn", ReplyAction="http://tempuri.org/IService1/SignInResponse")]
        System.Threading.Tasks.Task<BPT_Consumer.BPT_Service.User> SignInAsync(string email, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Register", ReplyAction="http://tempuri.org/IService1/RegisterResponse")]
        bool Register(string email, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Register", ReplyAction="http://tempuri.org/IService1/RegisterResponse")]
        System.Threading.Tasks.Task<bool> RegisterAsync(string email, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetUserById", ReplyAction="http://tempuri.org/IService1/GetUserByIdResponse")]
        BPT_Consumer.BPT_Service.User GetUserById(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetUserById", ReplyAction="http://tempuri.org/IService1/GetUserByIdResponse")]
        System.Threading.Tasks.Task<BPT_Consumer.BPT_Service.User> GetUserByIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetUserInfoById", ReplyAction="http://tempuri.org/IService1/GetUserInfoByIdResponse")]
        BPT_Consumer.BPT_Service.UserInfo GetUserInfoById(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetUserInfoById", ReplyAction="http://tempuri.org/IService1/GetUserInfoByIdResponse")]
        System.Threading.Tasks.Task<BPT_Consumer.BPT_Service.UserInfo> GetUserInfoByIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/CreateUser", ReplyAction="http://tempuri.org/IService1/CreateUserResponse")]
        BPT_Consumer.BPT_Service.User CreateUser(BPT_Consumer.BPT_Service.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/CreateUser", ReplyAction="http://tempuri.org/IService1/CreateUserResponse")]
        System.Threading.Tasks.Task<BPT_Consumer.BPT_Service.User> CreateUserAsync(BPT_Consumer.BPT_Service.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/CreateUserInfo", ReplyAction="http://tempuri.org/IService1/CreateUserInfoResponse")]
        BPT_Consumer.BPT_Service.UserInfo CreateUserInfo(BPT_Consumer.BPT_Service.UserInfo user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/CreateUserInfo", ReplyAction="http://tempuri.org/IService1/CreateUserInfoResponse")]
        System.Threading.Tasks.Task<BPT_Consumer.BPT_Service.UserInfo> CreateUserInfoAsync(BPT_Consumer.BPT_Service.UserInfo user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdateUser", ReplyAction="http://tempuri.org/IService1/UpdateUserResponse")]
        BPT_Consumer.BPT_Service.User UpdateUser(int id, BPT_Consumer.BPT_Service.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdateUser", ReplyAction="http://tempuri.org/IService1/UpdateUserResponse")]
        System.Threading.Tasks.Task<BPT_Consumer.BPT_Service.User> UpdateUserAsync(int id, BPT_Consumer.BPT_Service.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdateUserInfo", ReplyAction="http://tempuri.org/IService1/UpdateUserInfoResponse")]
        BPT_Consumer.BPT_Service.UserInfo UpdateUserInfo(int id, BPT_Consumer.BPT_Service.UserInfo user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdateUserInfo", ReplyAction="http://tempuri.org/IService1/UpdateUserInfoResponse")]
        System.Threading.Tasks.Task<BPT_Consumer.BPT_Service.UserInfo> UpdateUserInfoAsync(int id, BPT_Consumer.BPT_Service.UserInfo user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteUser", ReplyAction="http://tempuri.org/IService1/DeleteUserResponse")]
        void DeleteUser(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteUser", ReplyAction="http://tempuri.org/IService1/DeleteUserResponse")]
        System.Threading.Tasks.Task DeleteUserAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteUserInfo", ReplyAction="http://tempuri.org/IService1/DeleteUserInfoResponse")]
        void DeleteUserInfo(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteUserInfo", ReplyAction="http://tempuri.org/IService1/DeleteUserInfoResponse")]
        System.Threading.Tasks.Task DeleteUserInfoAsync(int id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : BPT_Consumer.BPT_Service.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<BPT_Consumer.BPT_Service.IService1>, BPT_Consumer.BPT_Service.IService1 {
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public BPT_Consumer.BPT_Service.User SignIn(string email, string password) {
            return base.Channel.SignIn(email, password);
        }
        
        public System.Threading.Tasks.Task<BPT_Consumer.BPT_Service.User> SignInAsync(string email, string password) {
            return base.Channel.SignInAsync(email, password);
        }
        
        public bool Register(string email, string password) {
            return base.Channel.Register(email, password);
        }
        
        public System.Threading.Tasks.Task<bool> RegisterAsync(string email, string password) {
            return base.Channel.RegisterAsync(email, password);
        }
        
        public BPT_Consumer.BPT_Service.User GetUserById(int id) {
            return base.Channel.GetUserById(id);
        }
        
        public System.Threading.Tasks.Task<BPT_Consumer.BPT_Service.User> GetUserByIdAsync(int id) {
            return base.Channel.GetUserByIdAsync(id);
        }
        
        public BPT_Consumer.BPT_Service.UserInfo GetUserInfoById(int id) {
            return base.Channel.GetUserInfoById(id);
        }
        
        public System.Threading.Tasks.Task<BPT_Consumer.BPT_Service.UserInfo> GetUserInfoByIdAsync(int id) {
            return base.Channel.GetUserInfoByIdAsync(id);
        }
        
        public BPT_Consumer.BPT_Service.User CreateUser(BPT_Consumer.BPT_Service.User user) {
            return base.Channel.CreateUser(user);
        }
        
        public System.Threading.Tasks.Task<BPT_Consumer.BPT_Service.User> CreateUserAsync(BPT_Consumer.BPT_Service.User user) {
            return base.Channel.CreateUserAsync(user);
        }
        
        public BPT_Consumer.BPT_Service.UserInfo CreateUserInfo(BPT_Consumer.BPT_Service.UserInfo user) {
            return base.Channel.CreateUserInfo(user);
        }
        
        public System.Threading.Tasks.Task<BPT_Consumer.BPT_Service.UserInfo> CreateUserInfoAsync(BPT_Consumer.BPT_Service.UserInfo user) {
            return base.Channel.CreateUserInfoAsync(user);
        }
        
        public BPT_Consumer.BPT_Service.User UpdateUser(int id, BPT_Consumer.BPT_Service.User user) {
            return base.Channel.UpdateUser(id, user);
        }
        
        public System.Threading.Tasks.Task<BPT_Consumer.BPT_Service.User> UpdateUserAsync(int id, BPT_Consumer.BPT_Service.User user) {
            return base.Channel.UpdateUserAsync(id, user);
        }
        
        public BPT_Consumer.BPT_Service.UserInfo UpdateUserInfo(int id, BPT_Consumer.BPT_Service.UserInfo user) {
            return base.Channel.UpdateUserInfo(id, user);
        }
        
        public System.Threading.Tasks.Task<BPT_Consumer.BPT_Service.UserInfo> UpdateUserInfoAsync(int id, BPT_Consumer.BPT_Service.UserInfo user) {
            return base.Channel.UpdateUserInfoAsync(id, user);
        }
        
        public void DeleteUser(int id) {
            base.Channel.DeleteUser(id);
        }
        
        public System.Threading.Tasks.Task DeleteUserAsync(int id) {
            return base.Channel.DeleteUserAsync(id);
        }
        
        public void DeleteUserInfo(int id) {
            base.Channel.DeleteUserInfo(id);
        }
        
        public System.Threading.Tasks.Task DeleteUserInfoAsync(int id) {
            return base.Channel.DeleteUserInfoAsync(id);
        }
    }
}
